%!PS-Adobe-3.0
%%Creator: groff version 1.22.2
%%CreationDate: Tue Dec  5 21:59:36 2017
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Helvetica-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.22 2
%%Pages: 4
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Helvetica-Bold@0 ENC0
/Helvetica-Bold RE/Courier@0 ENC0/Courier RE/Times-Bold@0 ENC0
/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 48 Q
(PS 6/pg 1)41.55 E(\2512017 Jef)119.78 E 2.5(fH)-.25 G(akner)-2.5 E/F1
11/Times-Bold@0 SF(Synchr)278.593 97 Q(onization)-.198 E/F2 11
/Times-Roman@0 SF 3.348(In this problem set, you will e)58 116 R 3.347
(xplore synchronization issues on a simulated multi-processor)-.165 F
6.097(,s)-.44 G(hared-memory)-6.097 E(en)58 129 Q 3.594(vironment. W)
-.44 F 3.594(ew)-.88 G .845(ill not use threads-based programming, b)
-3.594 F .845(ut instead will create an en)-.22 F .845
(vironment in which se)-.44 F -.165(ve)-.275 G(ral).165 E .722
(UNIX processes share a memory re)58 142 R .722(gion through)-.165 F/F3
11/Courier@0 SF(mmap)3.472 E F2 6.222(.E)C .722
(ach process represents a parallel processor)-6.222 F 6.221(.I)-.605 G
3.471(ne)-6.221 G -.275(ff)-3.471 G .721(ect, we).275 F .012
(are simulating the synchronization issues that an actual k)58 155 R
.012(ernel w)-.11 F .012(ould ha)-.11 F -.165(ve)-.22 G 2.762(,b).165 G
.012(ut from the relati)-2.982 F .342 -.165(ve c)-.275 H .013
(omfort and safety of).165 F(user)58 168 Q(-land.)-.22 E -1.21(Yo)58 187
S 3.304(uw)1.21 G .554(ill be b)-3.304 F .554
(uilding in layers: \214rst b)-.22 F .553(uild a spinlock mute)-.22 F
3.303(x\()-.165 G .553(using an atomic T)-3.303 F .553
(AS function that I pro)-1.023 F .553(vide\), then after)-.165 F .235
(testing it, b)58 200 R .235(uild our customized v)-.22 F .235
(ersion of Condition V)-.165 F .235
(ariables using only the spinlock primiti)-1.221 F .565 -.165(ve f)-.275
H .235(or locking.).165 F(Finally)5.736 E(,)-.715 E -.22(bu)58 213 S
3.676(ild a FIFO using your condition v).22 F 3.675(ariables library)
-.275 F 6.425(,a)-.715 G 3.675(nd b)-6.425 F 3.675(uild a test frame)
-.22 F -.11(wo)-.275 G 3.675(rk to pro).11 F 4.005 -.165(ve t)-.165 H
3.675(hat your entire).165 F(implementation is correct.)58 226 Q/F4 11
/Helvetica-Bold@0 SF(Pr)257.677 245 Q(ob)-.22 E(lem 1 -- Spin Loc)-.11 E
(k)-.22 E F2 .748
(The starting point is an atomic test and set instruction.)58 258 R .748
(Since "some assembly is required," this will be pro)6.248 F .748
(vided to)-.165 F .399(you in the \214le)58 271 R F3(tas.S)3.149 E F2
.398(\(32-bit\), or)3.149 F F3(tas64.S)3.148 E F2 3.148(\(64-bit\). Mak)
3.148 F 3.148(es)-.11 G .398
(ure you use the correct one for your architecture.)-3.148 F(Use)5.898 E
.066(it with a mak)58 284 R .066(e\214le or directly with gcc, e.g.)-.11
F F3 .067(gcc spinlock.c spintest.c tas.S)2.816 F F2 2.817(A.)2.817 G
2.817<538c>-2.817 G .067(le is a pure assembly)-2.817 F
(language function.)58 297 Q(At the C le)5.5 E -.165(ve)-.275 G
(l, it will w).165 E(ork as:)-.11 E/F5 10/Courier@0 SF
(int tas\(volatile char *lock\))58 311 Q F2 -1.21(Yo)58 324 S 3.553(uw)
1.21 G .803(ill ha)-3.553 F 1.133 -.165(ve t)-.22 H 3.553(ow).165 G .803
(rite your o)-3.553 F .803
(wn prototype for the function since no header is pro)-.275 F 3.553
(vided. The)-.165 F .803(tas function w)3.553 F .802(orks as)-.11 F .469
(described in the lecture notes.)58 337 R 3.219(Az)5.969 G .469(ero v)
-3.219 F .469(alue means unlock)-.275 F .469(ed, and tas returns the)
-.11 F/F6 11/Times-Italic@0 SF(pr)3.22 E -.165(ev)-.407 G(ious).165 E F2
-.275(va)3.22 G .47(lue of).275 F F3(*lock)3.22 E F2 3.22(,m)C(eaning)
-3.22 E .338
(it returns 0 when the lock has been acquired, and 1 when it has not.)58
350 R .337(Note that the tas function is de\214ned for a single)5.838 F
(char)58 363 Q 3.678(,s)-.44 G .928(ince it uses the XCHGB \(e)-3.678 F
.928(xchange Byte\) opcode, b)-.165 F .928(ut it returns an int.)-.22 F
.928(The use of the)6.428 F F3(volatile)3.678 E F2 -.11(ke)3.678 G(yw)
-.055 E(ord)-.11 E(tells the compiler to a)58 376 Q -.22(vo)-.22 G
(id optimizing memory accesses to the lock.).22 E(No)58 395 Q 3.091
-.715(w, i)-.275 H 1.661(mplement a tin).715 F 4.41(yl)-.165 G(ibrary)
-4.41 E F3(spinlock.c)4.41 E F2 1.66(and associated header \214le)4.41 F
F3(spinlock.h)4.41 E F2 1.66(using this pro)4.41 F 1.66(vided T)-.165 F
(AS)-1.023 E(primiti)58 408 Q -.165(ve)-.275 G 6.252(.C).165 G .752
(reate a data type such as)-6.252 F F3 .752(struct spinlock)3.502 F F2
.753(which will contain the char that is used by T)3.502 F .753
(AS as the)-1.023 F(primiti)58 421 Q .761 -.165(ve l)-.275 H 3.181
(ock. F).165 F .431(or deb)-.165 F .431(ugging purposes, your struct co\
uld also contain the pid of the current holder of the lock, or a)-.22 F
(count of ho)58 434 Q 2.75(wm)-.275 G(an)-2.75 E 2.75(yl)-.165 G
(ock/unlock operations were performed, etc.)-2.75 E(Pro)5.5 E(vide tw)
-.165 E 2.75(of)-.11 G(unctions in the library:)-2.75 E F5
(void spin_lock\(struct spinlock *l\);)58 448 Q
(void spin_unlock\(struct spinlock *l\);)58 462 Q F2 .747(These are)58
481 R F6(spin)3.498 E F2 .748(locks meaning there is no sleep/w)3.498 F
(ak)-.11 E .748(eup or other mute)-.11 F 3.498(xc)-.165 G .748
(ontention other than spinning on T)-3.498 F .748(AS until)-1.023 F .165
(the lock is clear)58 494 R 5.665(.C)-.605 G(learly)-5.665 E 2.915(,a)
-.715 G 2.915(se)-2.915 G .164
(xplained in lecture notes, the spin lock only mak)-3.08 F .164
(es sense when the period of contention)-.11 F .131(is brief.)58 507 R
F1(NO)5.631 E(TE:)-.44 E F2 -1.21(Yo)2.881 G .131
(ur performance may impro)1.21 F .461 -.165(ve o)-.165 H 2.881(nL).165 G
.131(inux systems if you use the)-2.881 F F3(sched_yield)2.882 E F2 .132
(system call inside)2.882 F(the spin w)58 520 Q(ait loop.)-.11 E -1.21
(Yo)5.5 G 2.75(uw)1.21 G(ill be trading of)-2.75 E 2.75(fu)-.275 G
(seless user)-2.75 E(-mode CPU c)-.22 E(ycles for the e)-.165 E
(xpense of a system call.)-.165 E -.385(Tr)5.5 G 2.75(yi).385 G(t.)-2.75
E F4(Pr)230.397 546 Q(ob)-.22 E(lem 2 -- T)-.11 E(est the test-and-set)
-.66 E F2(No)58 565 Q 3.793(ww)-.275 G 3.792(ec)-3.793 G 1.042(an b)
-3.792 F 1.042(uild a simple testing frame)-.22 F -.11(wo)-.275 G 1.042
(rk just to pro).11 F 1.372 -.165(ve t)-.165 H 1.042
(hat our spinlocks w).165 F 3.792(ork. Write)-.11 F 3.792(as)3.792 G
1.042(imple program that)-3.792 F 1.057(creates a shared mmap re)58 578
R 1.057(gion \(use MAP_ANONYMOUS | MAP_SHARED\), spa)-.165 F 1.058
(wns a number of child processes)-.165 F 1.004
(\(accept the number as a command-line ar)58 591 R 1.004(gument\) each \
of which does something non-atomic \(e.g. incrementing an)-.198 F(inte)
58 604 Q(ger in that shared memory area\).)-.165 E(Specify the number o\
f iterations per child process as a command-line ar)5.5 E(gument.)-.198
E(Sho)58 623 Q 4.551(wt)-.275 G 1.801(hat without protecting the non-at\
omic operation, incorrect results are obtained \(e.g. the \214nal v)
-4.551 F 1.802(alue of the)-.275 F .2
(number does not equal nchild * niter\).)58 636 R(Sho)5.7 E 2.95(wt)
-.275 G .199(hat with a spin lock protecting the atomic operation, corr\
ect results are)-2.95 F .467(consistently obtained.)58 649 R .467
(Run a number of trials with at least as man)5.967 F 3.217(yc)-.165 G
.467(hild processes as there are CPUs/cores on your)-3.217 F .534
(PC, or 8, whiche)58 662 R -.165(ve)-.275 G 3.284(ri).165 G 3.284(ss)
-3.284 G(maller)-3.284 E 3.284(,a)-.44 G .534(nd a suf)-3.284 F .534
(\214cient number of total iterations to demonstrate f)-.275 F .533
(ailure when it is e)-.11 F(xpected.)-.165 E
(Be mindful of silly things lik)58 675 Q 2.75(eo)-.11 G -.165(ve)-2.915
G(r\215o).165 E(wing a 32-bit int counter!)-.275 E F4(Pr)203.551 701 Q
(ob)-.22 E(lem 3 -- Implement Condition V)-.11 E(ariab)-.66 E(les)-.11 E
0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(ECE357:Computer Operating Systems)36 52 Q
(PS 6/pg 2)78.105 E(\2512017 Jef)164.158 E 2.75(fH)-.275 G(akner)-2.75 E
(No)58 104 Q 4.639(wc)-.275 G 1.889(reate a module called)-4.639 F/F1 11
/Courier@0 SF(cv.c)4.639 E F0 1.889(with associated header \214le)4.639
F F1(cv.h)4.639 E F0 7.389(.I)C 4.64(tw)-7.389 G 1.89(ill pro)-4.64 F
1.89(vide a modi\214ed and simpli\214ed)-.165 F .36
(implementation of Condition V)58 117 R 3.11(ariables \(the)-1.221 F .36
(lecture notes gi)3.11 F .69 -.165(ve ex)-.275 H .36
(amples using the POSIX Threads Library pthreads\)).165 F 2.963
(and will rely solely on spinlocks as the locking primiti)58 130 R -.165
(ve)-.275 G 5.713(,p).165 G 2.963
(lus certain UNIX system calls for blocking and)-5.713 F
(unblocking as described belo)58 143 Q 4.18 -.715(w. T)-.275 H(he follo)
.715 E(wing 4 functions must be written:)-.275 E/F2 10/Courier@0 SF
(void cv_init\(struct cv *cv\);)58 157 Q(/* Initialize any internal dat\
a structures in cv so that it is ready for)58 171 Q 6(*u)64 185 S 6
(se. The)-6 F(initial condition is that nobody is waiting for this cv.)6
E 6(*Y)64 199 S
(ou can probably arrange your struct cv so that all-0 bytes is)-6 E 6
(*t)64 213 S(he initialization condition.)-6 E(*/)64 227 Q
(void cv_wait\(struct cv *cv, struct spinlock *mutex\);)58 255 Q(/* Thi\
s will be called with the spinlock mutex held by the caller \(otherwise)
58 269 Q 6(*r)64 283 S(esults will be undefined\).)-6 E
(Atomically record within the internals)12 E 6(*o)64 297 S 6(fc)-6 G 6
(vt)-6 G(hat the caller is going to sleep, release the mutex, and)-6 E 6
(*g)64 311 S 6(ot)-6 G 6(os)-6 G(leep \(see text below\).)-6 E
(After waking up, re-acquire the mutex)12 E 6(*b)64 325 S
(efore returning to the caller)-6 E(*/)64 339 Q
(int cv_broadcast\(struct cv *cv\);)58 367 Q
(/* Wake up any and all waiters \(sleepers\) on this cv.)58 381 Q
(If there are no waiters)12 E 6(*t)64 395 S
(he call has no effect and is not "remembered" for the next time that)-6
E 6(*s)64 409 S(omeone calls cv_wait.)-6 E
(cv_broadcast should be called with the same mutex)12 E 6(*h)64 423 S
(eld that protects cv_wait, as discussed in lecture notes under "Lost)-6
E 6(*W)64 437 S(akup", but note that cv_broadcast does not take a mutex\
 as a parameter.)-6 E 6(*R)64 451 S
(eturn value: the number of sleepers that were awoken.)-6 E(*/)64 465 Q
(int cv_signal\(struct cv *cv\);)58 493 Q(/* Exactly the same as cv_bro\
adcast except at most one sleeper is awoken.)58 507 Q 6(*Y)64 521 S
(our choice how to pick which one if more than one candidate)-6 E(*/)64
535 Q F0 3.28(The condition v)58 554 R 3.28
(ariables create blocking semantics \(sleep and w)-.275 F(ak)-.11 E
3.279(eup.\) T)-.11 F 6.029(oi)-.88 G 3.279
(mplement this, you will use the)-6.029 F F1(sigsuspend)58 567 Q F0 .977
(system call in)3.727 F F1(cv_wait)3.727 E F0 .978
(which will block that process until a signal is recei)3.727 F -.165(ve)
-.275 G 3.728(d. Y).165 F .978(ou can think of)-1.21 F 1.878
(this as analogous to a ph)58 580 R 1.878(ysical CPU entering a po)-.055
F(wer)-.275 E(-sa)-.22 E 2.208 -.165(ve m)-.22 H 1.878
(ode because it has no useful w).165 F 1.877(ork to do until the)-.11 F
.47(condition that it is w)58 593 R .471
(aiting for is satis\214ed, and the signal as analogous to an inter)-.11
F .471(-processor interrupt from the w)-.22 F(ak)-.11 E(er)-.11 E 3.121
(CPU to the sleeper)58 606 R 8.621(.I)-.605 G 3.12(recommend using)
-2.751 F F1(SIGUSR1)5.87 E F0 3.12(for this signal.)5.87 F F1
(sigsuspend)8.62 E F0 3.12(has the useful semantics)5.87 F 1.479
(guaranteed by the k)58 619 R 1.479
(ernel that it atomically changes the block)-.11 F 1.48
(ed signals mask to the requested v)-.11 F 1.48(alue and puts the)-.275
F .416(process to sleep.)58 632 R .416(This allo)5.916 F .416
(ws us to k)-.275 F(eep)-.11 E F1(SIGUSR1)3.166 E F0(block)3.166 E .415
(ed, and to un-block it just when we use)-.11 F F1(sigsuspend)3.165 E F0
5.915(.I)C(n)-5.915 E .697(this w)58 645 R(ay)-.11 E 3.447(,w)-.715 G
3.447(ed)-3.447 G(on')-3.447 E 3.447(th)-.198 G -2.475 -.22(av e)-3.447
H .697(to w)3.667 F .697(orry about the race condition of the signal co\
ming in just as we are going to sleep and)-.11 F .869(missing it.)58 658
R -1.21(Yo)6.369 G 3.619(un)1.21 G .868(eed to establish a signal handl\
er \(because IGNoring the signal causes sigsuspend not to w)-3.619 F(ak)
-.11 E 3.618(eu)-.11 G(p,)-3.618 E 1.141(and the DeF)58 671 R 1.141
(auLt beha)-.165 F 1.141(vior is to terminate on SIGUSR1\) b)-.22 F
1.141(ut it need not do an)-.22 F 3.891(ything. The)-.165 F 1.141
(signal handler could be)3.891 F
(established in your cv module, or in the testing frame)58 684 Q -.11
(wo)-.275 G(rk.).11 E 1.77(Note ho)58 703 R(we)-.275 E -.165(ve)-.275 G
4.52(rt).165 G 1.77(hat there are additional challenges.)-4.52 F -1.21
(Yo)7.27 G 4.519(uw)1.21 G 1.769
(ill almost certainly need to introduce another spinlock)-4.519 F 0 Cg
EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(ECE357:Computer Operating Systems)36 52 Q
(PS 6/pg 3)78.105 E(\2512017 Jef)164.158 E 2.75(fH)-.275 G(akner)-2.75 E
.458(which is internal to the)58 104 R/F1 11/Courier@0 SF .458
(struct cv)3.208 F F0 .458(to protect its innards during critical non-a\
tomic operations, such as putting the)3.208 F 1.671(caller on the w)58
117 R 1.671(ait list.)-.11 F -1.21(Yo)7.17 G 4.42(um)1.21 G 1.67
(ay wish to introduce other deb)-4.42 F 1.67
(ugging counters, such as the total number of w)-.22 F(aits,)-.11 E -.11
(wa)58 130 S -.11(ke).11 G .124(ups and spurious w).11 F(ak)-.11 E .125
(eups \(w)-.11 F(ak)-.11 E .125(eup when nobody is sleeping\).)-.11 F/F2
11/Times-Bold@0 SF .125(Static limits:)5.625 F F0 .125
(to simplify coding, you can ha)2.875 F .455 -.165(ve a)-.22 H 1.678
(static limit)58 143 R F1(CV_MAXPROC)4.428 E F0 1.678(which is the maxi\
mum number of these simulated virtual processors that your library)4.428
F .04(needs to handle.)58 156 R .04(De\214ne this to be at least 64.)
5.54 F F2 .04(Malloc f)5.54 F(orbidden!)-.275 E F0 .041
(All parts of the)2.79 F F1 .041(struct cv)2.791 F F0 .041
(must be in the shared)2.791 F 1.085(memory re)58 169 R 3.835(gion. Do)
-.165 F 1.085(not use malloc since this will allocate memory from the h\
eap of the indi)3.835 F 1.084(vidual child process,)-.275 F .486
(which will not be shared.)58 182 R .486
(By using a static limit, you can a)5.986 F -.22(vo)-.22 G .486
(id all dynamic allocation within your cv module.).22 F(The)5.987 E
(initial allocation of the shared mmap re)58 195 Q
(gion is handled by the testing program, not your library)-.165 E(.)
-.715 E .646(It is suggested that after you code up this condition v)58
214 R .645(ar library)-.275 F 3.395(,y)-.715 G .645
(ou write a small testing frame)-3.395 F -.11(wo)-.275 G .645(rk to mak)
.11 F 3.395(es)-.11 G .645(ure it)-3.395 F -.11(wo)58 227 S .115
(rks correctly).11 F 5.615(.N)-.715 G .115
(ote that you are required to implement all four operations abo)-5.615 F
.445 -.165(ve c)-.165 H(orrectly).165 E 2.865(,e)-.715 G -.165(ve)-3.14
G 2.865(ni).165 G 2.865(fy)-2.865 G .116(ou do not wind)-2.865 F
(up using all of them in your FIFO belo)58 240 Q 4.18 -.715(w. Y)-.275 H
(ou do not ha)-.495 E .33 -.165(ve t)-.22 H 2.75(os).165 G
(ubmit your test frame)-2.75 E -.11(wo)-.275 G(rk for this part.).11 E
/F3 11/Helvetica-Bold@0 SF(Pr)198.134 266 Q(ob)-.22 E
(lem 4 -- A FIFO using condition v)-.11 E(ariab)-.22 E(les)-.11 E F0(No)
58 285 Q 3.149(wc)-.275 G .399(reate a \214fo module,)-3.149 F F1
(fifo.c)3.149 E F0 .399(with associated header \214le)3.149 F F1(fifo.h)
3.148 E F0 3.148(,w)C .398(hich maintains a FIFO of unsigned longs)
-3.148 F 1.129(using a shared memory data structure protected and coord\
inated with the spinlock and condition v)58 298 R 1.13(ariable modules)
-.275 F(de)58 311 Q -.165(ve)-.275 G(loped abo).165 E -.165(ve)-.165 G
(.).165 E/F4 10/Courier@0 SF(void fifo_init\(struct fifo *f\);)58 325 Q
(/* Initialize the shared memory FIFO *f including any required underly\
ing)58 339 Q 6(*i)64 353 S(nitializations \(such as calling cv_init\).)
-6 E(The FIFO will have a static)12 E 6(*f)64 367 S
(ifo length of MYFIFO_BUFSIZ elements.)-6 E(#define this in fifo.h.)18 E
6(*Av)64 381 S(alue of 1K is reasonable.)-6 E(*/)64 395 Q
(void fifo_wr\(struct fifo *f,unsigned long d\);)58 423 Q(/* Enqueue th\
e data word d into the FIFO, blocking unless and until the)58 437 Q 6
(*F)64 451 S(IFO has room to accept it. \(i.e. block until !full\))-6 E
(*/)64 465 Q(unsigned long fifo_rd\(struct fifo *f\);)58 493 Q
(/* Dequeue the next data word from the FIFO and return it.)58 507 Q
(Block unless)12 E 6(*a)64 521 S(nd until there are available words.)-6
E(\(i.e. block until !empty\))12 E(*/)64 535 Q F0 .393
(The FIFO itself should be implemented as a \214x)58 554 R .393
(ed array of longs as a circular b)-.165 F(uf)-.22 E .392
(fer with suitable pointers or indices)-.275 F .223(for the ne)58 567 R
.223(xt open write slot and the ne)-.165 F .223(xt a)-.165 F -.275(va)
-.22 G .223(ilable read slot.).275 F .224
(Since reading and writing the FIFO in)5.724 F -.22(vo)-.44 G(lv).22 E
.224(es non-atomic)-.165 F .467
(operations, you will need one or more spinlock mute)58 580 R -.165(xe)
-.165 G 3.217(st).165 G 3.217(op)-3.217 G .467(rotect that.)-3.217 F
-1.21(Yo)5.967 G 3.217(uc)1.21 G .467(ould use the same mute)-3.217 F
3.217(xt)-.165 G .467(hat protects)-3.217 F(the condition v)58 593 Q
(ariable.)-.275 E F3(Pr)245.505 619 Q(ob)-.22 E(lem 5 -- T)-.11 E(est y)
-.66 E(our FIFO)-.275 E F0 .041(Create a frame)58 638 R -.11(wo)-.275 G
.042(rk for testing your FIFO implementation.).11 F .042(Establish a)
5.542 F F1 .042(struct fifo)2.792 F F0 .042(in shared memory and create)
2.792 F(tw)58 651 Q 3.039(ov)-.11 G .288(irtual processors, one of whic\
h will be the writer and the other the reader)-3.039 F 5.788(.H)-.605 G
-2.475 -.22(av e)-5.788 H .288(the writer send a \214x)3.258 F .288
(ed number)-.165 F(of sequentially-numbered data using)58 664 Q F1
(fifo_wr)2.75 E F0(and ha)2.75 E .33 -.165(ve t)-.22 H
(he reader read these and v).165 E(erify that all were recei)-.165 E
-.165(ve)-.275 G(d.).165 E(Ne)58 683 Q 1.668(xt, gi)-.165 F 1.998 -.165
(ve y)-.275 H 1.668
(our system the acid test by creating multiple writers, b).165 F 1.669
(ut one reader)-.22 F 7.169(.I)-.605 G 4.419(nas)-7.169 G 1.669
(uccessful test, all of the)-4.419 F .369
(writers' streams will be recei)58 696 R -.165(ve)-.275 G 3.118(db).165
G 3.118(yt)-3.118 G .368(he reader complete, in \(relati)-3.118 F -.165
(ve)-.275 G 3.118(\)s).165 G .368
(equence, with no missing or duplicated items,)-3.118 F 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 11/Times-Roman@0 SF(ECE357:Computer Operating Systems)36 52 Q
(PS 6/pg 4)78.105 E(\2512017 Jef)164.158 E 2.75(fH)-.275 G(akner)-2.75 E
1.417(and all processes will e)58 104 R -.165(ve)-.275 G 1.418
(ntually run to completion and e).165 F 1.418(xit \(no hanging\).)-.165
F 4.168(As)6.918 G 1.418(uggested approach is to treat each)-4.168 F
2.143(datum \(32-bit w)58 117 R 2.143(ord\) as a bitwise w)-.11 F 2.143
(ord consisting of an ID for the writer and the sequence number)-.11 F
7.642(.\()-.605 G 2.142(It is not)-7.642 F
(necessary to test under multiple readers, b)58 130 Q
(ut your \214fo code should w)-.22 E(ork correctly for this case\))-.11
E 1.057(TIPS: recei)58 149 R 1.057(ving a writer')-.275 F 3.807(ss)-.605
G 1.058(tream out-of-order indicates improper locking protection of the\
 FIFO during read/write)-3.807 F 2.771(operations. F)58 162 R .021(ailu\
re of all the writers to run to completion without hanging and/or f)
-.165 F .021(ailure of the reader to see all of the)-.11 F(streams comp\
lete indicates an issue with the full/empty conditions and/or the condi\
tion v)58 175 Q(ariables module.)-.275 E .697
(Use reasonable test parameters.)58 194 R(Remember)6.198 E 3.448(,a)-.44
G 3.448(na)-3.448 G .698(cid test of a FIFO where the b)-3.448 F(uf)-.22
E .698(fer does not \214ll and empty quite a)-.275 F(fe)58 207 Q 3.309
(wt)-.275 G .559(imes has a pH of 6.9, i.e. it isn')-3.309 F 3.309(ta)
-.198 G -.165(ve)-.001 G .558(ry strong acid.).165 F -1.21(Yo)6.058 G
3.308(us)1.21 G .558(hould be able to demonstrate)-3.308 F/F1 11
/Times-Bold@0 SF(failur)3.308 E(e)-.198 E F0 .558(by deliberately)3.308
F .615(breaking something in your implementation, e.g. re)58 220 R -.165
(ve)-.275 G .615(rsing the order of tw).165 F 3.365(ol)-.11 G .615
(ocking operations.)-3.365 F -1.21(Yo)6.116 G 3.366(us)1.21 G .616
(hould then be)-3.366 F(able to demonstrate success under a v)58 233 Q
(ariety of strenuous conditions.)-.275 E/F2 11/Times-Italic@0 SF .814
(Submit all of the code comprising this \214nal test system, i.e)58 252
R 3.563(.y)-.165 G .813(our spinloc)-3.563 F(k.[c)-.22 E .813(h] cv)
-.165 F(.[c)-.814 E .813(h], \214fo.[c)-.165 F .813
(h] and main.c \214les, as)-.165 F 1.691(well as output fr)58 265 R
1.691(om your test pr)-.495 F -.11(og)-.495 G -.165(ra).11 G 4.441(ms)
.165 G 1.691(howing it r)-4.441 F 1.691(an corr)-.165 F(ectly)-.407 E
7.191(.I)-.605 G 4.441(ft)-7.191 G 1.691(he output is very verbose)
-4.441 F 4.442(,y)-.11 G 1.692(ou may trim the)-4.442 F(uninter)58 278 Q
(esting stuf)-.407 E 2.75(fw)-.198 G(ith an appr)-2.75 E
(opriate annotation.)-.495 E/F3 10/Courier@0 SF
(#Sample output....your output is not required to match this!)58 305 Q 6
($t)58 319 S(ime ./ftest -w40 -n30000)-6 E
(Beginning test with 40 writers, 30000 items each)58 333 Q
(Writer 0 completed)58 347 Q(Reader stream 0 completed)58 361 Q
(Writer 39 completed)58 375 Q(Reader stream 39 completed)58 389 Q
(Writer 13 completed)58 403 Q(Reader stream 13 completed)58 417 Q
(Writer 5 completed)58 431 Q(Reader stream 5 completed)58 445 Q
(Reader stream 38 completed)58 459 Q(All streams done)58 473 Q
(Waiting for writer children to die)58 487 Q 18(real 0m2.275s)58 515 R
18(user 0m4.145s)58 529 R 24(sys 0m11.758s)58 543 R(#This was using sch\
ed_yield in the spinlock loop, hence the high systime)58 571 Q
(#Note that U+S > R.)58 585 Q
(This was run on a system with 8 independent)12 E
(#execution units \(what Linux calls "cpus"\))58 599 Q
(and \(U+S\) ~= 8R)12 E
(#system load from other tasks was low at the time of execution)58 613 Q
0 Cg EP
%%Trailer
end
%%EOF
